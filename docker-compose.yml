version: '3'
services:
  llama-api:
    build: 
      context: ./llama-api-docker
      dockerfile: Dockerfile
    container_name: llama-api
    volumes:
      - ./llama-api-docker/models_new:/app/models
      - ./RAG/documents:/app/RAG/documents
      - ./RAG/embeddings:/app/RAG/embeddings
    ports:
      - "8000:8000"
    environment:
      - MODEL_DIR=/app/models/Llama-3.2-1B_new
      - PYTHONPATH=/app
    networks:
      - app-network

  rag-service:
    image: python:3.10-slim
    container_name: rag-service
    command: sh -c "pip install -r /app/RAG/requirements.txt && python /app/RAG/light_rag.py"
    volumes:
      - ./llama-api-docker/models_new:/app/models
      - ./RAG:/app/RAG
    ports:
      - "8001:8001"
    environment:
      - MODEL_DIR=/app/models/Llama-3.2-1B_new
      - RAG_PORT=8001
      - PYTHONPATH=/app
    networks:
      - app-network

#  guardrails:
#    build:
#      context: ./guardrails
#      dockerfile: Dockerfile
#    container_name: guardrails
#    ports:
#      - "8001:8000"
#    volumes:
#      - ./rails:/app/rails
#    networks:
#      - app-network

  ui:
    build:
      context: ./UI
      dockerfile: Dockerfile
    container_name: ui-app
    ports:
      - "3001:3000"
    environment:
      - NODE_ENV=development
      - MONGODB_URI=mongodb://mongodb:27017/autoconfig
      - LLAMA_API_URL=http://llama-api:8000
      - RAG_API_URL=http://rag-service:8001
    volumes:
      - ./UI:/app
      - /app/node_modules
    depends_on:
      - mongodb
      - llama-api
      - rag-service
    networks:
      - app-network
      
  mongodb:
    image: mongo:latest
    container_name: mongodb
    ports:
      - "27018:27017"
    volumes:
      - mongodb_data:/data/db
    environment:
      - MONGO_INITDB_DATABASE=autoconfig
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
    
volumes:
  mongodb_data:
    driver: local
